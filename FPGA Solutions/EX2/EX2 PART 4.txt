LIBRARY ieee;
USE ieee.std_logic_1164.all;
ENTITY ex2part4 IS
     PORT(SW: IN STD_LOGIC_VECTOR(9 DOWNTO 0);
     LEDG: OUT STD_LOGIC_VECTOR(9 DOWNTO 0);
	  HEX0,HEX1,HEX2,HEX3: OUT STD_LOGIC_VECTOR(6 DOWNTO 0));  
END ex2part4;

ARCHITECTURE Brehh OF ex2part4 IS

signal A,B,S2,S1,S0,COUT,COUT2:STD_LOGIC_VECTOR(3 DOWNTO 0);
SIGnal CIN,Z,Z1,Z2:STD_LOGIC;

	COMPONENT bcd7seg 
		PORT(	X: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
				H: OUT STD_LOGIC_VECTOR(6 DOWNTO 0));
	end comPONENT;
	
COMPONENT FULLADDER
PORT (A,B,CIN: IN STD_LOGIC;
		S,COUT: OUT STD_LOGIC);
		
END COMPONENT;

BEGIN 
	A(3 DOWNTO 0)<=SW(7 DOWNTO 4);
	B(3 DOWNTO 0)<=SW(3 DOWNTO 0);
	
	CIN<=SW(8);
	
	H0: FULLADDER PORT MAP (A(0),B(0),CIN,S0(0),COUT(0));
	H1: FULLADDER PORT MAP (A(1),B(1),COUT(0),S0(1),COUT(1));
	H2: FULLADDER PORT MAP (A(2),B(2),COUT(1),S0(2),COUT(2));
	H3: FULLADDER PORT MAP (A(3),B(3),COUT(2),S0(3),COUT(3));
	
	Z<=S0(3) AND (S0(2) or S0(1));
	
	Z1<=A(3) AND (A(2) or A(1)); --switch'de girilen A ve B 4bitlik BCD'lerin 9'dan büyük olup olmadýðýný kontrol eder.
	Z2<=B(3) AND (B(2) or B(1));
	
	S1(3)<='0';
	S1(2)<='0';
	S1(1)<='0';
	S1(0)<=Z or COUT(3);--toplamdaki onlar basamaðýnýn 1 veya 0 olma durumu..
	
	x0: FULLADDER PORT MAP (S0(0),(Z xor cout(3)) and '0','0',S2(0),COUT2(0));
	x1: FULLADDER PORT MAP (S0(1),(Z xor cout(3)) and '1',COUT2(0),S2(1),COUT2(1));
	x2: FULLADDER PORT MAP (S0(2),(Z xor cout(3)) and '1',COUT2(1),S2(2),COUT2(2));
	x3: FULLADDER PORT MAP (S0(3),(Z xor cout(3)) and '0',COUT2(2),S2(3),COUT2(3));	
	
	digit0: bcd7seg PORT MAP (A(3 DOWNTO 0), HEX3);
	digit1: bcd7seg PORT MAP (B(3 DOWNTO 0), HEX2);
	digit2: bcd7seg PORT MAP (S1(3 DOWNTO 0), HEX1);
	digit3: bcd7seg PORT MAP (S2(3 DOWNTO 0), HEX0);


	--LED (3-0) direkt olarak switchlerdeki A ve B giriþlerinin toplamýný gösteriyor, bcd ye girmedenki.
	LEDG(3 DOWNTO 0)<=S0(3 DOWNTO 0);
	LEDG(4)<=COUT(3); --cout 
	LEDG(7)<=Z1 or Z2; -- A veya B 9'dan büyükse LED (7) yanar..
END Brehh;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
ENTITY FULLADDER IS
     PORT(A,B,CIN: IN STD_LOGIC;
     S,COUT: OUT STD_LOGIC);  
END FULLADDER;

ARCHITECTURE BREhh OF FULLADDER IS
BEGIN
	S<= (A XOR B) XOR CIN;
	COUT<= (NOT(A XOR B) AND B) OR ((A XOR B) AND CIN);


END BREhh;



LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY bcd7seg IS
 PORT ( X : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
 H : OUT STD_LOGIC_VECTOR(6 DOWNTO 0));
END bcd7seg;

ARCHITECTURE Behh OF bcd7seg IS
BEGIN


	H(0)<=NOT(X(3) or X(1) or not(X(2) xor X(0)));
	H(1)<=NOT(X(3) or not(x(2)) or not(X(1) xor x(0)));
	H(2)<=NOT(X(3) OR X(2) OR X(0) OR NOT (X(1)));
	H(3)<=NOT(X(3) OR (NOT(X(2)) AND (NOT (X(0)) OR X(1))) OR (X(1) AND NOT (X(0))) OR (X(2) AND X(0) AND NOT (X(1))));
	H(4)<=NOT (NOT (X(0)) AND (NOT (X(2)) OR X(1)));
	H(5)<=NOT(X(3) OR (X(2) AND NOT (X(1))) OR (NOT (X(0)) AND (X(2) OR NOT (X(1)))));
	H(6)<=NOT(X(3) OR (X(1) AND NOT (X(0))) OR (X(2) XOR X(1)));
 
 END Behh;