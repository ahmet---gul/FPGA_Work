LIBRARY ieee;
Use ieee.std_logic_1164.all;

ENTITY ex2part2 is
	PORT ( SW: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
			 HEX1, HEX0: OUT STD_LOGIC_VECTOR(0 TO 6));

END ex2part2;


ARCHITECture behh of ex2part2 is
	COMPONENT bcd7seg 
		PORT(	X: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
				H: OUT STD_LOGIC_VECTOR(0 TO 6));
	end comPONENT;

	SIGNAL V, M: STD_LOGIC_VECTOR(3 DOWNTO 0);
	SIGNAL B: STD_LOGIC_VECTOR(2 DOWNTO 0);
	SIGNAL Z: STD_LOGIC;
	
BEGIN
 V <= SW(3 DOWNTO 0);

 Z <= V(3) AND (V(2) OR (V(1))); --z'nin fonksiyonu

--birler basamaðýna göre girdinin son 3 bit'i deðiþtiriliyor..
 B(2) <= V(2) AND V(1);
 B(1) <= V(2) AND NOT(V(1));
 B(0) <= (V(1) AND V(0)) OR (V(2) AND V(0));

 --Z sayýsý sayesinde sayýnýn 9'dan küçük olup olmadýðýna bakarak M'nin bitlerini belirliyoruz..
 M(3) <= NOT(Z) AND V(3);
 M(2) <= (NOT(Z) AND V(2)) OR (Z AND B(2));
 M(1) <= (NOT(Z) AND V(1)) OR (Z AND B(1));
 M(0) <= (NOT(Z) AND V(0)) OR (Z AND B(0));
 

 A: bcd7seg PORT MAP (M, HEX0);
 
 --hexz olan birler basamaðýný M ile oluþturuyoruz..

  --Z sayýsýna göre onlar basamaðýný 0 ya da 1 olarak belirliyoruz..
 HEX1 <= (Z & '0' & '0' & Z & Z & Z & '1' );
END Behh;


LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY bcd7seg IS
 PORT ( X : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
 H : OUT STD_LOGIC_VECTOR(0 TO 6));
END bcd7seg;

ARCHITECTURE Behh OF bcd7seg IS
BEGIN

	H(0)<=NOT(X(3) or X(1) or not(X(2) xor X(0)));
	H(1)<=NOT(X(3) or not(x(2)) or not(X(1) xor x(0)));
	H(2)<=NOT(X(3) OR X(2) OR X(0) OR NOT (X(1)));
	H(3)<=NOT(X(3) OR (NOT(X(2)) AND (NOT (X(0)) OR X(1))) OR (X(1) AND NOT (X(0))) OR (X(2) AND X(0) AND NOT (X(1))));
	H(4)<=NOT (NOT (X(0)) AND (NOT (X(2)) OR X(1)));
	H(5)<=NOT(X(3) OR (X(2) AND NOT (X(1))) OR (NOT (X(0)) AND (X(2) OR NOT (X(1)))));
	H(6)<=NOT(X(3) OR (X(1) AND NOT (X(0))) OR (X(2) XOR X(1)));
 
 END Behh;