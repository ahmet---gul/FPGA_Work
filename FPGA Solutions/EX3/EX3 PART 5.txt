LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


ENTITY ex3part5 IS
     PORT(SW: IN STD_LOGIC_VECTOR(7 DOWNTO 0);
	  HEX0,HEX1,HEX2,HEX3: OUT STD_LOGIC_VECTOR(0 TO 6);  
	  KEY : IN STD_LOGIC_VECTOR(1 DOWNTO 0));
END ex3part5;


ARCHITECTURE Brehh OF ex3part5 IS
	 COMPONENT regne
	 PORT ( R : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
	 CLK, Resetn : IN STD_LOGIC;
	 Q : OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
	 END COMPONENT;
	 
	 COMPONENT hex7seg
	 PORT ( hex : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	 display : OUT STD_LOGIC_VECTOR(0 TO 6));
	 END COMPONENT;

	 SIGNAL A,B: STD_LOGIC_VECTOR(7 DOWNTO 0);
BEGIN
	 A_reg: regne PORT MAP (SW, KEY(1), KEY(0), A);
	 B(7 DOWNTO 0)<=SW(7 DOWNTO 0);
	

	 H3: hex7seg PORT MAP(A(7 DOWNTO 4),HEX3);
	 H2: hex7seg PORT MAP(A(3 DOWNTO 0),HEX2);
	
	 H1: hex7seg PORT MAP(B(7 DOWNTO 4),HEX1);
	 H0: hex7seg PORT MAP(B(3 DOWNTO 0),HEX0);
	
END Brehh;

LIBRARY ieee;
USE ieee.std_logic_1164.all;
ENTITY regne IS
	 PORT ( R : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
	 CLK, Resetn : IN STD_LOGIC;
	 Q : OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
END regne;

ARCHITECTURE Behh OF regne IS
BEGIN

	 PROCESS (CLK, Resetn)
	 BEGIN
	 IF (Resetn = '0') THEN
	 Q <= (OTHERS => '0');
	 ELSIF (CLK'EVENT AND CLK = '1') THEN
	 Q <= R;
	 END IF;
	 END PROCESS;
 
END Behh;


LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY hex7seg IS
	 PORT ( hex: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	 display : OUT STD_LOGIC_VECTOR(0 TO 6));
END hex7seg;

ARCHITECTURE Behavior OF hex7seg IS
BEGIN

 PROCESS (hex)
 BEGIN
 CASE hex IS
WHEN "0000" => display <= "0000001";
 WHEN "0001" => display <= "1001111";
 WHEN "0010" => display <= "0010010";
 WHEN "0011" => display <= "0000110";
 WHEN "0100" => display <= "1001100";
 WHEN "0101" => display <= "0100100";
 WHEN "0110" => display <= "0100000";
 WHEN "0111" => display <= "0001111";
 WHEN "1000" => display <= "0000000";
 WHEN "1001" => display <= "0000100";
 WHEN "1010" => display <= "0001000";
 WHEN "1011" => display <= "1100000";
 WHEN "1100" => display <= "0110001";
 WHEN "1101" => display <= "1000010";
 WHEN "1110" => display <= "0110000";
 WHEN "1111" => display <= "0111000"; 

 END CASE;
 END PROCESS;
 
END Behavior;
	
