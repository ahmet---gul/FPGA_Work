LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY ex4part1 IS
     PORT(SW: IN STD_LOGIC_VECTOR(7 DOWNTO 0);
	  HEX0,HEX1: OUT STD_LOGIC_VECTOR(0 TO 6);  
	  KEY : IN STD_LOGIC_VECTOR(1 DOWNTO 0));
END ex4part1;

ARCHITECTURE Brehh OF ex4part1 IS
	 
	 COMPONENT hex7seg
	 PORT ( hex : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	 display : OUT STD_LOGIC_VECTOR(0 TO 6));
	 END COMPONENT;
	 
	 COMPONENT t_fp
	 PORT ( T, CLK, CLR: IN STD_LOGIC;
			  Q: OUT STD_LOGIC);
	 END COMPONENT;
	 
	 SIGNAL A,EN: STD_LOGIC_VECTOR(7 DOWNTO 0);
	 SIGNAL CLK,CLR: STD_LOGIC;
BEGIN
    CLK<=KEY(0);
	 CLR<=SW(0);
	 
	 EN(0)<=SW(1);
	 F0: t_fp PORT MAP(EN(0),CLK,CLR,A(0));
	 
	 EN(1)<=A(0) AND EN(0);
	 F1: t_fp PORT MAP(EN(1),CLK,CLR,A(1));
	 
	 EN(2)<=A(1) AND EN(1);
	 F2: t_fp PORT MAP(EN(2),CLK,CLR,A(2));
	 
	 EN(3)<=A(2) AND EN(2);
	 F3: t_fp PORT MAP(EN(3),CLK,CLR,A(3));
	 
	 EN(4)<=A(3) AND EN(3);
	 F4: t_fp PORT MAP(EN(4),CLK,CLR,A(4));
	 
	 EN(5)<=A(4) AND EN(4);
	 F5: t_fp PORT MAP(EN(5),CLK,CLR,A(5));
	 
	 EN(6)<=A(5) AND EN(5);
	 F6: t_fp PORT MAP(EN(6),CLK,CLR,A(6));
	 
	 EN(7)<=A(6) AND EN(6);
	 F7: t_fp PORT MAP(EN(7),CLK,CLR,A(7));
	 
	 H1: hex7seg PORT MAP(A(7 DOWNTO 4),HEX1);
	 H0: hex7seg PORT MAP(A(3 DOWNTO 0),HEX0);
END Brehh;

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY t_fp is
		 PORT ( T, CLK, CLR: IN STD_LOGIC;
			  Q: OUT STD_LOGIC);
END t_fp;

ARCHITECTURE Behh of t_fp is
	SIGNAL T_T: STD_LOGIC;

BEGIN
	PROCESS(CLR,CLK)
	BEGIN
	IF  CLK'EVENT AND CLK='1' then
		IF CLR='0' then
			T_T<='0';
		ELSIF  T='1' then
			T_T<= NOT T_T;
		END IF;
	END IF;
	END PROCESS;
	
	Q<=T_T;
END Behh;

LIBRARY ieee;
USE ieee.std_logic_1164.all;

ENTITY hex7seg IS
	 PORT ( hex: IN STD_LOGIC_VECTOR(3 DOWNTO 0);
	 display : OUT STD_LOGIC_VECTOR(0 TO 6));
END hex7seg;

ARCHITECTURE Behavior OF hex7seg IS
BEGIN

 PROCESS (hex)
 BEGIN
 CASE hex IS
WHEN "0000" => display <= "0000001";
 WHEN "0001" => display <= "1001111";
 WHEN "0010" => display <= "0010010";
 WHEN "0011" => display <= "0000110";
 WHEN "0100" => display <= "1001100";
 WHEN "0101" => display <= "0100100";
 WHEN "0110" => display <= "0100000";
 WHEN "0111" => display <= "0001111";
 WHEN "1000" => display <= "0000000";
 WHEN "1001" => display <= "0000100";
 WHEN "1010" => display <= "0001000";
 WHEN "1011" => display <= "1100000";
 WHEN "1100" => display <= "0110001";
 WHEN "1101" => display <= "1000010";
 WHEN "1110" => display <= "0110000";
 WHEN "1111" => display <= "0111000"; 

 END CASE;
 END PROCESS;
 
END Behavior;